import type { PropType } from 'vue';
import type { ButtonSize, Strategy } from '../../types/index.js';
declare const buttonGroupConfig: {
    wrapper: {
        horizontal: string;
        vertical: string;
    };
    rounded: string;
    shadow: string;
    orientation: {
        'rounded-none': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-sm': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        rounded: {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-md': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-lg': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-xl': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-2xl': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-3xl': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
        'rounded-full': {
            horizontal: {
                start: string;
                end: string;
            };
            vertical: {
                start: string;
                end: string;
            };
        };
    };
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    size: {
        type: PropType<ButtonSize>;
        default: any;
        validator(value: string): boolean;
    };
    orientation: {
        type: PropType<"horizontal" | "vertical">;
        default: string;
        validator(value: string): boolean;
    };
    class: {
        type: PropType<any>;
        default: () => "";
    };
    ui: {
        type: PropType<Partial<typeof buttonGroupConfig> & {
            strategy?: Strategy;
        }>;
        default: () => {};
    };
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    size: {
        type: PropType<ButtonSize>;
        default: any;
        validator(value: string): boolean;
    };
    orientation: {
        type: PropType<"horizontal" | "vertical">;
        default: string;
        validator(value: string): boolean;
    };
    class: {
        type: PropType<any>;
        default: () => "";
    };
    ui: {
        type: PropType<Partial<typeof buttonGroupConfig> & {
            strategy?: Strategy;
        }>;
        default: () => {};
    };
}>>, {
    orientation: "horizontal" | "vertical";
    size: ButtonSize;
    ui: {};
    class: any;
}, {}>;
export default _default;
